Collection Loading and Layer Initialization Fixes
1. Standardize Event Payloads in useCollection.js
Locate the event handler for 'collection:loaded' in useCollection.js
Add standardization logic to normalize event payloads regardless of source
Extract collectionId properly from either data.id or data.collectionId
Add validation before processing collection data
Add fallback logic to load collection by ID if only ID is provided
Log warnings for missing collection IDs in events

2. Update Collection Event Handlers in LayerContext.js
Find the useEffect that subscribes to collection events
Update or add a handler for 'collection:selected' event
Update or add a handler for 'collection:loaded' event
Add validation to check if collection data is valid before registration
Extract collectionId consistently from either collection.id or data.collectionId
Log detailed information about collection selection/loading
Avoid duplicate collection registration
Properly unsubscribe from events on cleanup

3. Add Layer Error Handling in BufferContext.js
Add a new useEffect that subscribes to 'layer:error' events
Implement a comprehensive error handler for layer errors
Update the loading errors state with layer-specific error information
Include collection context in error logging when available
Re-emit more specific buffer error events for consistency
Log detailed information about layer errors
Properly unsubscribe from events on cleanup

4. Prevent Duplicate Collection Loading in Player.js
Add a reference to track already loaded collections (collectionLoadedRef)
Update the useEffect that handles collection changes
Add a check to prevent re-processing already registered collections
Maintain a map of collection IDs that have been processed
Only call registerCollection for new collections
Log information about skipped duplicate registrations
Ensure the formatForPlayer logic remains intact

5. Enhance Validation in CollectionContext.js
Update the getCollection method with better validation
Add a check to avoid loading a collection that's already being loaded
Validate collection data after loading to ensure it has required fields
Standardize event emission with consistent payload structure
Include both collection object and collectionId in events for compatibility
Add detailed logging for successful collection loading
Add source tracking in collection loading events

6. Standardize Event Naming in EventBus.js
Ensure all event constants are properly defined in EVENTS object
Make sure collection events use consistent naming patterns
Verify that event names match between emitters and listeners
Add any missing event constants for layer and collection operations

7. Add Missing Event Listeners in BufferContext.js
Add listeners for all collection-related events
Implement handling for 'layer:collectionRegistered' events
Add proper error handling for collection loading failures
Update the loadCollectionAudio method to properly emit standardized events
Ensure all events include standardized timestamp and relevant identifiers

8. Update useLayer.js Collection Handling
Fix the collection loaded handler to properly extract collection data
Add validation before attempting to use collection data
Log detailed information about collection loading state
Add error handling for invalid collection data
Ensure layer tracking is properly updated when collections change

9. Improve Progress Tracking in BufferContext.js
Enhance the progress tracking for collection loading
Add better error handling for partial loading success
Update collection loading state management for better visibility
Emit standardized progress events for UI feedback

10. Fix Collection Registration in LayerContext.js
Update the registerCollection method to properly handle different collection formats
Add validation before processing collection data
Ensure proper event emission after successful registration
Include collection metadata in registration events